/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.VetAssistRole;

import java.awt.CardLayout;
import java.awt.Component;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.AdoptDetails.AdoptionOffered;
import model.Animal.AnimalDetails;
import model.Animal.AnimalStatusDetails;
import model.Animal.CatDetails;
import model.Animal.DogDetails;
import model.Cages.CageDetail;
import model.Enterprises.EnterpriseDetails;
import model.Enterprises.RescueCenterEntDetails;
import model.ShelterCell.ShelterCellDetails;
import view.Main.Main;

/**
 *
 * @author sejal
 */
public class ReviewAnimalJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ReviewAnimalJPanel
     */
    
    private CageDetail cage;
    private JPanel container;
    private RescueCenterEntDetails enterprise;
    
    ReviewAnimalJPanel(JPanel container, EnterpriseDetails enterprise, CageDetail cage) {
        initComponents();
        this.container = container;
        this.cage = cage;
        this.enterprise = (RescueCenterEntDetails)enterprise;

        
        rbtnGood.setSelected(true);
        populateTable();
    }

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel)tblCage.getModel();
        model.setRowCount(0);
        Object[] row = new Object[4];
        row[0] = cage.getCellno();
        row[1] = cage.getCagelocation();
        row[2] = cage.getAnimal().getType();
        row[3] = cage.getAnimal().getColor();

        model.addRow(row);
    }
    
    public Date getDateAfterNDays(Date d, int n) {
        Calendar calendar = Calendar.getInstance();  
        calendar.setTime(d);  
        calendar.add(Calendar.DAY_OF_MONTH, n);
        return calendar.getTime();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        lblreviewani = new javax.swing.JLabel();
        btnFinish = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        rbtnGood = new javax.swing.JRadioButton();
        txtWeight = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        rbtnBad = new javax.swing.JRadioButton();
        rbtnReserved = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCage = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(1920, 1080));
        setMinimumSize(new java.awt.Dimension(1920, 1080));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnBack.setText(" Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 600, 70, 30));

        lblreviewani.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblreviewani.setText("REVIEW ANIMAL");
        add(lblreviewani, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 260, -1, -1));

        btnFinish.setText("Finish");
        btnFinish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinishActionPerformed(evt);
            }
        });
        add(btnFinish, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 600, -1, 30));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        rbtnGood.setText("Good");
        rbtnGood.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnGoodActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel3.setText("Weight:");

        jLabel4.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel4.setText("Status:");

        rbtnBad.setText("Bad");
        rbtnBad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnBadActionPerformed(evt);
            }
        });

        rbtnReserved.setText("Reserved");
        rbtnReserved.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnReservedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(110, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(rbtnBad))
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(rbtnReserved)
                        .addGap(37, 37, 37)
                        .addComponent(rbtnGood))
                    .addComponent(txtWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(75, 75, 75))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(rbtnBad)
                    .addComponent(rbtnReserved)
                    .addComponent(rbtnGood))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 470, 510, -1));

        tblCage.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cage", "Location", "Animal Type", "Color"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCage.setSelectionBackground(new java.awt.Color(255, 204, 204));
        jScrollPane1.setViewportView(tblCage);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 320, 505, 132));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Peace.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-120, 0, 1920, 1080));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        Component[] componentArray = container.getComponents();
        Component component = componentArray[componentArray.length - 1];
        VeteAssistantWorkAreaJPanel vajp = (VeteAssistantWorkAreaJPanel) component;
        vajp.populateTable();
        CardLayout layout = (CardLayout)container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_btnBackActionPerformed

    private void rbtnBadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnBadActionPerformed
        // TODO add your handling code here:
        rbtnReserved.setSelected(false);
        rbtnGood.setSelected(false);
    }//GEN-LAST:event_rbtnBadActionPerformed

    private void rbtnReservedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnReservedActionPerformed
        // TODO add your handling code here:
        rbtnBad.setSelected(false);
        rbtnGood.setSelected(false);
    }//GEN-LAST:event_rbtnReservedActionPerformed

    private void rbtnGoodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnGoodActionPerformed
        // TODO add your handling code here:
        rbtnBad.setSelected(false);
        rbtnReserved.setSelected(false);
    }//GEN-LAST:event_rbtnGoodActionPerformed

    private void btnFinishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinishActionPerformed
        // TODO add your handling code here:
        if(!txtWeight.getText().matches("\\d+(\\.\\d+)?")) {
            JOptionPane.showMessageDialog(null, "Weight is invalid.");
            return;
        }
        
        AnimalStatusDetails statusRecord = new AnimalStatusDetails();
        
        double weight = Double.parseDouble(txtWeight.getText());
        statusRecord.setWeight(weight);
        
        Main.controller.saveObject(statusRecord);
        
        if(rbtnBad.isSelected()) {
            statusRecord.setStatus(AnimalStatusDetails.Status.BAD);
            Main.controller.saveOrUpdate(statusRecord);
            Date d = getDateAfterNDays(statusRecord.getDate(),7);
            cage.getAnimal().setNextCheck(d);
            cage.getAnimal().getStatusDirectory().add(statusRecord);
            Main.controller.saveOrUpdate(cage.getAnimal());
        }
        else if(rbtnReserved.isSelected()) {
            statusRecord.setStatus(AnimalStatusDetails.Status.RESERVED);
            Main.controller.saveOrUpdate(statusRecord);
            Date d = getDateAfterNDays(statusRecord.getDate(),7);
            cage.getAnimal().setNextCheck(d);
            cage.getAnimal().getStatusDirectory().add(statusRecord);
            Main.controller.saveOrUpdate(cage.getAnimal());
        }
        else if(rbtnGood.isSelected()) {
            statusRecord.setStatus(AnimalStatusDetails.Status.GOOD);
            Main.controller.saveOrUpdate(statusRecord);
            cage.getAnimal().setStatus(AnimalDetails.Status.READY);
            Main.controller.saveOrUpdate(cage.getAnimal());
            
            if(cage.getAnimal() instanceof CatDetails || cage.getAnimal() instanceof DogDetails) {
                AdoptionOffered ao = new AdoptionOffered();
                ao.setAnimal(cage.getAnimal());
                ao.setPublishDate(statusRecord.getDate());
                Main.controller.saveObject(ao);
                enterprise.getAdoptionList().add(ao);
                Main.controller.saveOrUpdate(enterprise);
            }
            
            for(ShelterCellDetails sc: enterprise.getShelterCellDirectory()) {
                if(sc.getStatus().equals(ShelterCellDetails.Status.AVAILABLE)) {
                    sc.setAnimal(cage.getAnimal());
                    sc.setStatus(ShelterCellDetails.Status.OCCUPIED);
                    Main.controller.saveOrUpdate(sc);
                    break;
                }
            }
            cage.setCagestatus(CageDetail.Status.AVAILABLE);
            cage.getAnimal().getStatusDirectory().add(statusRecord);
            Main.controller.saveOrUpdate(cage.getAnimal());
            cage.setAnimal(null);
            Main.controller.saveOrUpdate(cage);
            
        }
        String message = "Review has been recorded.";
        if(rbtnGood.isSelected() == true) {
            message += "\nThe Animal has been sent to shelter.";
        }
        else {
            message += "\nThe date of next review has been updated.";
        }
        btnFinish.setEnabled(false);
        JOptionPane.showMessageDialog(null, message);
        
    }//GEN-LAST:event_btnFinishActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnFinish;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblreviewani;
    private javax.swing.JRadioButton rbtnBad;
    private javax.swing.JRadioButton rbtnGood;
    private javax.swing.JRadioButton rbtnReserved;
    private javax.swing.JTable tblCage;
    private javax.swing.JTextField txtWeight;
    // End of variables declaration//GEN-END:variables
}
